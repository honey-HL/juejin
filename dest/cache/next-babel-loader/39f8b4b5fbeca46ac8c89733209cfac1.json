{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import fetch from 'isomorphic-unfetch';\nimport axios from 'axios'; // import fetch from 'node-fetch';\n// actionType\n\nconst GET_LIST = 'INDEX/GOLD'; // actionCreator\n\nconst updatedGoldList = data => ({\n  type: GET_LIST,\n  data\n});\n\nexport const getGoldList = server => {\n  // https://extension-ms.juejin.im/resources/gold\n  let postData = {\n    category: \"frontend\",\n    order: \"heat\",\n    offset: 0,\n    limit: 30\n  };\n  return (dispatch, getState, $axios) => {\n    // https://api.tvmaze.com/search/shows?q=batman\n    return axios.post('/api/resources/gold', postData).then(res => {\n      console.log('res=>', res);\n      const data = res;\n      console.log(`Show data fetched. Count: ${data.length}`);\n      dispatch(updatedGoldList(data));\n    });\n  };\n};\nconst defaultState = {\n  data: []\n};\nexport default ((state = defaultState, action) => {\n  switch (action.type) {\n    case GET_LIST:\n      console.log(action.type, state);\n\n      const newState = _objectSpread({}, state, {\n        data: action.data\n      });\n\n      return newState;\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/honney/Projects/MINE/juejin/store/index.js"],"names":["axios","GET_LIST","updatedGoldList","data","type","getGoldList","server","postData","category","order","offset","limit","dispatch","getState","$axios","post","then","res","console","log","length","defaultState","state","action","newState"],"mappings":";;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AAEA;;AACA,MAAMC,QAAQ,GAAG,YAAjB,C,CAIA;;AACA,MAAMC,eAAe,GAAGC,IAAI,KAAK;AAC7BC,EAAAA,IAAI,EAAEH,QADuB;AAE7BE,EAAAA;AAF6B,CAAL,CAA5B;;AAMA,OAAO,MAAME,WAAW,GAAGC,MAAM,IAAI;AAAE;AACnC,MAAIC,QAAQ,GAAG;AACXC,IAAAA,QAAQ,EAAE,UADC;AAEXC,IAAAA,KAAK,EAAE,MAFI;AAGXC,IAAAA,MAAM,EAAE,CAHG;AAIXC,IAAAA,KAAK,EAAE;AAJI,GAAf;AAMA,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqBC,MAArB,KAAgC;AAAE;AACrC,WAAOd,KAAK,CAACe,IAAN,CAAW,qBAAX,EAAkCR,QAAlC,EACNS,IADM,CACDC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,GAApB;AACA,YAAMd,IAAI,GAAGc,GAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BhB,IAAI,CAACiB,MAAO,EAArD;AACAR,MAAAA,QAAQ,CAACV,eAAe,CAACC,IAAD,CAAhB,CAAR;AACH,KANM,CAAP;AAOH,GARD;AASH,CAhBM;AAmBP,MAAMkB,YAAY,GAAG;AACjBlB,EAAAA,IAAI,EAAE;AADW,CAArB;AAGA,gBAAe,CAACmB,KAAK,GAAGD,YAAT,EAAuBE,MAAvB,KAAkC;AAC7C,UAAOA,MAAM,CAACnB,IAAd;AACI,SAAKH,QAAL;AACIiB,MAAAA,OAAO,CAACC,GAAR,CAAYI,MAAM,CAACnB,IAAnB,EAAyBkB,KAAzB;;AACA,YAAME,QAAQ,qBACPF,KADO;AAEVnB,QAAAA,IAAI,EAAEoB,MAAM,CAACpB;AAFH,QAAd;;AAIA,aAAOqB,QAAP;;AACJ;AACI,aAAOF,KAAP;AATR;AAWH,CAZD","sourcesContent":["// import fetch from 'isomorphic-unfetch';\nimport axios from 'axios'\n// import fetch from 'node-fetch';\n\n// actionType\nconst GET_LIST = 'INDEX/GOLD';\n\n\n\n// actionCreator\nconst updatedGoldList = data => ({\n    type: GET_LIST,\n    data\n})\n\n\nexport const getGoldList = server => { // https://extension-ms.juejin.im/resources/gold\n    let postData = {\n        category: \"frontend\",\n        order: \"heat\",\n        offset: 0,\n        limit: 30\n    }\n    return (dispatch, getState, $axios) => { // https://api.tvmaze.com/search/shows?q=batman\n        return axios.post('/api/resources/gold', postData)\n        .then(res => {\n            console.log('res=>',res)\n            const data = res;\n            console.log(`Show data fetched. Count: ${data.length}`);\n            dispatch(updatedGoldList(data))\n        })\n    }\n}\n\n\nconst defaultState = {\n    data: [],\n}\nexport default (state = defaultState, action) => {\n    switch(action.type){\n        case GET_LIST:\n            console.log(action.type, state)\n            const newState = {\n                ...state,\n                data: action.data\n            }\n            return newState\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}