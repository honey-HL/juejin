{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _List from \"antd/lib/list\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport store from '../store/store';\nimport { connect } from 'react-redux';\nimport { getGoldList } from '../store/index';\n\nvar Index = function Index(_ref) {\n  var count = _ref.count,\n      add = _ref.add,\n      goldList = _ref.goldList;\n  console.log('goldList==>', goldList);\n  return __jsx(React.Fragment, null, __jsx(_List, {\n    itemLayout: \"horizontal\",\n    dataSource: goldList,\n    renderItem: function renderItem(item) {\n      return __jsx(_List.Item, null, __jsx(_List.Item.Meta, {\n        title: __jsx(\"a\", {\n          href: \"https://ant.design\"\n        }, item.title)\n      }));\n    }\n  }));\n};\n\nIndex.getInitialProps = function _callee(_ref2) {\n  var reduxStore;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          reduxStore = _ref2.reduxStore;\n          console.log('state==>', reduxStore.getState());\n\n          if (!reduxStore.getState().index.goldList.length) {\n            reduxStore.dispatch(getGoldList());\n          }\n\n          return _context.abrupt(\"return\", {});\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default connect(function (state) {\n  return {\n    goldList: state.index.goldList\n  };\n}, {\n  getGoldList: getGoldList\n})(Index);","map":{"version":3,"sources":["/Users/honney/Projects/MINE/juejin/pages/index.js"],"names":["Link","Router","axios","store","connect","getGoldList","Index","count","add","goldList","console","log","item","title","getInitialProps","reduxStore","getState","index","length","dispatch","state"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,WAAR,QAA0B,gBAA1B;;AAKA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAA6B;AAAA,MAA1BC,KAA0B,QAA1BA,KAA0B;AAAA,MAAnBC,GAAmB,QAAnBA,GAAmB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BF,QAA1B;AACA,SACE,4BACC;AACG,IAAA,UAAU,EAAC,YADd;AAEG,IAAA,UAAU,EAAEA,QAFf;AAGG,IAAA,UAAU,EAAE,oBAAAG,IAAI;AAAA,aACd,YAAM,IAAN,QACE,YAAM,IAAN,CAAW,IAAX;AACE,QAAA,KAAK,EAAE;AAAG,UAAA,IAAI,EAAC;AAAR,WAA8BA,IAAI,CAACC,KAAnC;AADT,QADF,CADc;AAAA;AAHnB,IADD,CADF;AAeD,CAjBD;;AAmBAP,KAAK,CAACQ,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,UAAT,SAASA,UAAT;AACtBL,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBI,UAAU,CAACC,QAAX,EAAvB;;AACA,cAAI,CAACD,UAAU,CAACC,QAAX,GAAsBC,KAAtB,CAA4BR,QAA5B,CAAqCS,MAA1C,EAAkD;AAChDH,YAAAA,UAAU,CAACI,QAAX,CAAoBd,WAAW,EAA/B;AACD;;AAJqB,2CAKf,EALe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAQA,eAAeD,OAAO,CACpB,UAAAgB,KAAK;AAAA,SAAK;AAACX,IAAAA,QAAQ,EAAEW,KAAK,CAACH,KAAN,CAAYR;AAAvB,GAAL;AAAA,CADe,EAEpB;AAACJ,EAAAA,WAAW,EAAXA;AAAD,CAFoB,CAAP,CAGbC,KAHa,CAAf","sourcesContent":["import Link from 'next/link'\nimport Router from 'next/router'\nimport { Button } from 'antd'\nimport axios from 'axios'\nimport store from '../store/store'\nimport { connect } from 'react-redux'\nimport {getGoldList} from '../store/index'\nimport { List, Avatar } from 'antd';\n\n\n\nconst Index = ({ count, add ,goldList}) => {\n  console.log('goldList==>',goldList)\n  return (\n    <>\n     <List\n        itemLayout=\"horizontal\"\n        dataSource={goldList}\n        renderItem={item => (\n          <List.Item>\n            <List.Item.Meta\n              title={<a href=\"https://ant.design\">{item.title}</a>}\n            />\n          </List.Item>\n        )}\n      />\n    </>\n  )\n}\n\nIndex.getInitialProps = async ({ reduxStore }) => {\n  console.log('state==>',reduxStore.getState())\n  if (!reduxStore.getState().index.goldList.length) {\n    reduxStore.dispatch(getGoldList())\n  }\n  return {}\n}\n\nexport default connect(\n  state => ({goldList: state.index.goldList}),\n  {getGoldList}\n)(Index)"]},"metadata":{},"sourceType":"module"}