{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheet } from 'styled-components';\nexport default class MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const sheet = new ServerStyleSheet(); // 劫持原本的renderPage函数并重写\n\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () => originalRenderPage({\n        // 根App组件\n        enhanceApp: App => props => sheet.collectStyles(__jsx(App, props))\n      }); // 如果重写了getInitialProps 就要把这段逻辑重新实现\n\n\n      const props = await Document.getInitialProps(ctx);\n      return _objectSpread({}, props, {\n        styles: __jsx(React.Fragment, null, props.styles, sheet.getStyleElement())\n      });\n    } finally {\n      sheet.seal();\n    }\n  } // 如果要重写render 就必须按照这个结构来写\n\n\n  render() {\n    return __jsx(Html, null, __jsx(Head, null), __jsx(\"body\", null, __jsx(Main, null), __jsx(NextScript, null), \"\\b\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/honney/Projects/MINE/juejin/pages/_document.js"],"names":["Document","Html","Head","Main","NextScript","ServerStyleSheet","MyDocument","getInitialProps","ctx","sheet","originalRenderPage","renderPage","enhanceApp","App","props","collectStyles","styles","getStyleElement","seal","render"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,UAArC,QAAuD,eAAvD;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AAEA,eAAe,MAAMC,UAAN,SAAyBN,QAAzB,CAAkC;AAC/C,eAAaO,eAAb,CAA6BC,GAA7B,EAAkC;AAChC,UAAMC,KAAK,GAAG,IAAIJ,gBAAJ,EAAd,CADgC,CAEhC;;AACA,UAAMK,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AAEA,QAAI;AACFH,MAAAA,GAAG,CAACG,UAAJ,GAAiB,MACfD,kBAAkB,CAAC;AACjB;AACAE,QAAAA,UAAU,EAAEC,GAAG,IAAIC,KAAK,IAAIL,KAAK,CAACM,aAAN,CAAoB,MAAC,GAAD,EAASD,KAAT,CAApB;AAFX,OAAD,CADpB,CADE,CAMF;;;AACA,YAAMA,KAAK,GAAG,MAAMd,QAAQ,CAACO,eAAT,CAAyBC,GAAzB,CAApB;AACA,+BACKM,KADL;AAEEE,QAAAA,MAAM,EACJ,4BACGF,KAAK,CAACE,MADT,EAEGP,KAAK,CAACQ,eAAN,EAFH;AAHJ;AASD,KAjBD,SAiBU;AACRR,MAAAA,KAAK,CAACS,IAAN;AACD;AACF,GA1B8C,CA4B/C;;;AACAC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD,QACE,MAAC,IAAD,OADF,EAEE,oBACE,MAAC,IAAD,OADF,EAEE,MAAC,UAAD,OAFF,OAFF,CADF;AASD;;AAvC8C","sourcesContent":["import Document, { Html, Head, Main, NextScript } from 'next/document'\nimport { ServerStyleSheet } from 'styled-components'\n\nexport default class MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const sheet = new ServerStyleSheet()\n    // 劫持原本的renderPage函数并重写\n    const originalRenderPage = ctx.renderPage\n\n    try {\n      ctx.renderPage = () =>\n        originalRenderPage({\n          // 根App组件\n          enhanceApp: App => props => sheet.collectStyles(<App {...props} />),\n        })\n      // 如果重写了getInitialProps 就要把这段逻辑重新实现\n      const props = await Document.getInitialProps(ctx)\n      return {\n        ...props,\n        styles: (\n          <>\n            {props.styles}\n            {sheet.getStyleElement()}\n          </>\n        ),\n      }\n    } finally {\n      sheet.seal()\n    }\n  }\n\n  // 如果要重写render 就必须按照这个结构来写\n  render() {\n    return (\n      <Html>\n        <Head />\n        <body>\n          <Main />\n          <NextScript />\b\n        </body>\n      </Html>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}