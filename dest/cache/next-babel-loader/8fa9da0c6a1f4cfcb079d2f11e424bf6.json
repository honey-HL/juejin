{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport indexReducer from './index';\nvar reducer = combineReducers({\n  index: indexReducer\n});\nexport default function initializeStore(state) {\n  var store = createStore(reducer, // Object.assign({}, initialState, state),\n  applyMiddleware(ReduxThunk));\n  return store;\n} // import { createStore, applyMiddleware } from 'redux'\n// import ReduxThunk from 'redux-thunk'\n// const initialState = {\n//   count: 0,\n// }\n// function reducer(state = initialState, action) {\n//   switch (action.type) {\n//     case 'add':\n//       return {\n//         count: state.count + 1,\n//       }\n//       break\n//     default:\n//       return state\n//   }\n// }\n// export default function initializeStore(state) {\n//   const store = createStore(\n//     reducer,\n//     Object.assign({}, initialState, state),\n//     applyMiddleware(ReduxThunk)\n//   )\n//   return store\n// }","map":{"version":3,"sources":["/Users/honney/Projects/MINE/juejin/store/store.js"],"names":["createStore","applyMiddleware","combineReducers","ReduxThunk","indexReducer","reducer","index","initializeStore","state","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,YAAP,MAAyB,SAAzB;AAEA,IAAMC,OAAO,GAAGH,eAAe,CAAC;AAC5BI,EAAAA,KAAK,EAAEF;AADqB,CAAD,CAA/B;AAIA,eAAe,SAASG,eAAT,CAAyBC,KAAzB,EAAgC;AAC7C,MAAMC,KAAK,GAAGT,WAAW,CACvBK,OADuB,EAEvB;AACAJ,EAAAA,eAAe,CAACE,UAAD,CAHQ,CAAzB;AAKA,SAAOM,KAAP;AACD,C,CAKD;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport ReduxThunk from 'redux-thunk'\nimport indexReducer from './index';\n\nconst reducer = combineReducers({\n    index: indexReducer\n}) \n\nexport default function initializeStore(state) {\n  const store = createStore(\n    reducer,\n    // Object.assign({}, initialState, state),\n    applyMiddleware(ReduxThunk)\n  )\n  return store\n}\n\n\n\n\n// import { createStore, applyMiddleware } from 'redux'\n// import ReduxThunk from 'redux-thunk'\n\n// const initialState = {\n//   count: 0,\n// }\n\n// function reducer(state = initialState, action) {\n//   switch (action.type) {\n//     case 'add':\n//       return {\n//         count: state.count + 1,\n//       }\n//       break\n\n//     default:\n//       return state\n//   }\n// }\n\n// export default function initializeStore(state) {\n//   const store = createStore(\n//     reducer,\n//     Object.assign({}, initialState, state),\n//     applyMiddleware(ReduxThunk)\n//   )\n//   return store\n// }"]},"metadata":{},"sourceType":"module"}